|-----------------------------------|
|--------REQUEST HEADER FIELDS------|
|-----------------------------------|

A client sends request header fields to provide more information about the request
context, make the request conditional based on the target resource state, suggest 
preferred formats for the response, supply authentication credentials, or modify the 
expected request processing. These fields act as request modifiers, similar to the
parameters on a programming language method invocation.



--------------------------------
------------CONTROLS------------
--------------------------------

Controls are request header fields that direct specific handling of the request :
	-Cache-Control, [RFC7234] Section 5.2 
	-Expect
	-Host, [RFC7230] Section 5.4
	-Max-Forwards
	-Pragma, [RFC7234] Section 5.4
	-Range, [RFC7233] Section 3.1
	-TE, [RFC7230] Section 4.3


/*1.Expect*/
This request header field gives a set of behaviors needed to be supported by the server
to handle the request.
Expect = "100-continue"
A server receiving an Expect field-value other than 100-continue may respond with a 417
status code as the unexpected expectation cannot be met.
A 100-continue expectation informs that the client will send a mesage body in the request
and wants to receive a 100 interim responses if the request-line and header fields are not
sufficient to cause an immediate success, redirect, or error response.
Example page 34.
All requirements/behaviors for clients and servers page 34 and 35.


/*2.Max-Forwards*/
--Not asked for Webserv as it is by default useless without TRACE and OPTIONS--



--------------------------------
----------CONDITIONNALS---------
--------------------------------

These header fields allow a client to place a condition on the state of the target resource
using a comparison between a set of validators obtained from prior representations of the
target resource to the current state of validators for the selected representation.
All about conditionnal header fields in [RFC7232].
	-If-Match, [RFC7232] Section 3.1
	-If-None-Match, [RFC7232] Section 3.2
	-If-Modified-Since, [RFC7232] Section 3.3
	-If-Unmodified-Since, [RFC7232] Section 3.4
	-If-Range, [RFC7232] Section 3.2



--------------------------------
-------CONTENT NEGOTIATION------
--------------------------------

